# ------------------------------------------------------------------------------
# USB EPROM/Flash Programmer
#
# Copyright (2022) Robson Martins
#
# This work is licensed under a Creative Commons Attribution-NonCommercial-
# ShareAlike 4.0 International License.
# ------------------------------------------------------------------------------
name: Temp

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  SOFTWARE_PROJECT_DIR: ${{github.workspace}}/software/usbflashprog

jobs:
  temp:
    name: Temp
    runs-on: windows-latest
    steps:
      # ------------------------------------------------------------------------
      # Checkout the sources
      # ------------------------------------------------------------------------
      - name: Checkout the Sources
        uses: actions/checkout@v3
    
      # ------------------------------------------------------------------------
      # Install MinGW and Qt (Windows)
      # ------------------------------------------------------------------------
      - name: Install MinGW64 and Qt (Windows 64-bits)
        uses: msys2/setup-msys2@v2
        with:
            msystem: mingw64
            install: 
                mingw-w64-x86_64-toolchain
                mingw-w64-x86_64-cmake
                mingw-w64-x86_64-qt5
            release: false

      # ------------------------------------------------------------------------
      # Install Inno Setup (Windows)
      # ------------------------------------------------------------------------
      - name: Install Inno Setup (Windows)
        env:
          INNO_SETUP_DOWNLOAD_URL: "https://files.jrsoftware.org/is/6/innosetup-6.2.1.exe"
        working-directory: ${{env.SOFTWARE_PROJECT_DIR}}/scripts
        run: |
          wget "${{env.INNO_SETUP_DOWNLOAD_URL}}" &&
          ./innosetup-6.2.1.exe //VERYSILENT //SUPPRESSMSGBOXES //SP //CURRENTUSER //LANG=en //NORESTART //NOICONS //DIR=".\is"
        shell: msys2 {0}

      # ------------------------------------------------------------------------
      # Configure CMake
      # ------------------------------------------------------------------------
      - name: Configure CMake (Windows)
        env:
          CMAKE_PREFIX_PATH: ${{env.Qt5_Dir}}
        working-directory: ${{env.SOFTWARE_PROJECT_DIR}}
        run: cmake -G "MinGW Makefiles" -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        shell: msys2 {0}

      # ------------------------------------------------------------------------
      # Build
      # ------------------------------------------------------------------------
      - name: Build (Windows)
        working-directory: ${{env.SOFTWARE_PROJECT_DIR}}
        run: |
          cmake --build build --config ${{env.BUILD_TYPE}} &&
          echo "BUILD_VERSION=`cat VERSION`-`date +%s`" >> $GITHUB_ENV
        shell: msys2 {0}

      # ------------------------------------------------------------------------
      # Create the Installer
      # ------------------------------------------------------------------------
      - name: Create the Installer (Windows 64-bits)
        working-directory: ${{env.SOFTWARE_PROJECT_DIR}}/scripts
        run: |
          ./is/iscc.exe //DARCH="Win64" //DQT_PATH="c:\\msys64\\mingw64" //DQT_PLUGINS_PATH="c:\\msys64\\mingw64\\share\\qt5\\plugins" ufprog.iss
          mv "../build/ufprog-`cat ../VERSION`-win64-setup.exe" "../build/ufprog-${{env.BUILD_VERSION}}-win64-setup.exe"
        shell: msys2 {0}

      # ------------------------------------------------------------------------
      # Upload the Installer
      # ------------------------------------------------------------------------
      - name: Upload the Installer (Windows 64-bits)
        uses: actions/upload-artifact@v3
        with:
          path: "${{env.SOFTWARE_PROJECT_DIR}}/build/ufprog-*setup.exe"
          name: "ufprog-win64-installer"
